// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: msgs.proto

package orderbook

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgBid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< Updated upstream
	Pair      *Pair    `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	MaxPrice  float64  `protobuf:"fixed64,2,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	Quantity  uint64   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	AccountId uint64   `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Signature [][]byte `protobuf:"bytes,5,rep,name=signature,proto3" json:"signature,omitempty"`
||||||| constructed merge base
	Pair      *Pair    `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	Order     *Order   `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Signature [][]byte `protobuf:"bytes,3,rep,name=signature,proto3" json:"signature,omitempty"`
=======
	Pair      *Pair     `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	MaxPrice  uint64    `protobuf:"varint,2,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	Quantity  uint64    `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	AccountId uint64    `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Signature [][]byte  `protobuf:"bytes,5,rep,name=signature,proto3" json:"signature,omitempty"`
	Order     *OrderBid `protobuf:"bytes,6,opt,name=order,proto3" json:"order,omitempty"`
>>>>>>> Stashed changes
}

func (x *MsgBid) Reset() {
	*x = MsgBid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBid) ProtoMessage() {}

func (x *MsgBid) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBid.ProtoReflect.Descriptor instead.
func (*MsgBid) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{0}
}

func (x *MsgBid) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

<<<<<<< Updated upstream
func (x *MsgBid) GetMaxPrice() float64 {
||||||| constructed merge base
func (x *MsgPlaceOrder) GetOrder() *Order {
=======
func (x *MsgBid) GetMaxPrice() uint64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *MsgBid) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MsgBid) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *MsgBid) GetSignature() [][]byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *MsgBid) GetOrder() *OrderBid {
>>>>>>> Stashed changes
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *MsgBid) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MsgBid) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *MsgBid) GetSignature() [][]byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

<<<<<<< Updated upstream
type MsgAsk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair      *Pair    `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	Price     float64  `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity  uint64   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	AccountId uint64   `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Signature [][]byte `protobuf:"bytes,5,rep,name=signature,proto3" json:"signature,omitempty"`
}

func (x *MsgAsk) Reset() {
	*x = MsgAsk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAsk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAsk) ProtoMessage() {}

func (x *MsgAsk) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAsk.ProtoReflect.Descriptor instead.
func (*MsgAsk) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{1}
}

func (x *MsgAsk) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

func (x *MsgAsk) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MsgAsk) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MsgAsk) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *MsgAsk) GetSignature() [][]byte {
||||||| constructed merge base
func (x *MsgPlaceOrder) GetSignature() [][]byte {
=======
type MsgAsk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair      *Pair     `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	MinPrice  uint64    `protobuf:"varint,2,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	Quantity  uint64    `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	AccountId uint64    `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Signature [][]byte  `protobuf:"bytes,5,rep,name=signature,proto3" json:"signature,omitempty"`
	Order     *OrderAsk `protobuf:"bytes,6,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *MsgAsk) Reset() {
	*x = MsgAsk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAsk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAsk) ProtoMessage() {}

func (x *MsgAsk) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAsk.ProtoReflect.Descriptor instead.
func (*MsgAsk) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{1}
}

func (x *MsgAsk) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

func (x *MsgAsk) GetMinPrice() uint64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *MsgAsk) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MsgAsk) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *MsgAsk) GetSignature() [][]byte {
>>>>>>> Stashed changes
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *MsgAsk) GetOrder() *OrderAsk {
	if x != nil {
		return x.Order
	}
	return nil
}

type MsgCreateAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey   [][]byte     `protobuf:"bytes,1,rep,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Commodities []*Commodity `protobuf:"bytes,2,rep,name=commodities,proto3" json:"commodities,omitempty"`
}

func (x *MsgCreateAccount) Reset() {
	*x = MsgCreateAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateAccount) ProtoMessage() {}

func (x *MsgCreateAccount) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateAccount.ProtoReflect.Descriptor instead.
func (*MsgCreateAccount) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{2}
}

func (x *MsgCreateAccount) GetPublicKey() [][]byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *MsgCreateAccount) GetCommodities() []*Commodity {
	if x != nil {
		return x.Commodities
	}
	return nil
}

type MsgRegisterPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair *Pair `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *MsgRegisterPair) Reset() {
	*x = MsgRegisterPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterPair) ProtoMessage() {}

func (x *MsgRegisterPair) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterPair.ProtoReflect.Descriptor instead.
func (*MsgRegisterPair) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{3}
}

func (x *MsgRegisterPair) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//a Msg has to be one of the below
	//
	// Types that are assignable to Sum:
<<<<<<< Updated upstream
	//	*Msg_MsgBid
	//	*Msg_MsgAsk
||||||| constructed merge base
	//	*Msg_MsgPlaceOrder
=======
	//	*Msg_MsgAsk
	//	*Msg_MsgBid
>>>>>>> Stashed changes
	//	*Msg_MsgRegisterPair
	//	*Msg_MsgCreateAccount
	Sum isMsg_Sum `protobuf_oneof:"sum"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_msgs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_msgs_proto_rawDescGZIP(), []int{4}
}

func (m *Msg) GetSum() isMsg_Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

<<<<<<< Updated upstream
func (x *Msg) GetMsgBid() *MsgBid {
	if x, ok := x.GetSum().(*Msg_MsgBid); ok {
		return x.MsgBid
	}
	return nil
}

func (x *Msg) GetMsgAsk() *MsgAsk {
	if x, ok := x.GetSum().(*Msg_MsgAsk); ok {
		return x.MsgAsk
||||||| constructed merge base
func (x *Msg) GetMsgPlaceOrder() *MsgPlaceOrder {
	if x, ok := x.GetSum().(*Msg_MsgPlaceOrder); ok {
		return x.MsgPlaceOrder
=======
func (x *Msg) GetMsgAsk() *MsgAsk {
	if x, ok := x.GetSum().(*Msg_MsgAsk); ok {
		return x.MsgAsk
	}
	return nil
}

func (x *Msg) GetMsgBid() *MsgBid {
	if x, ok := x.GetSum().(*Msg_MsgBid); ok {
		return x.MsgBid
>>>>>>> Stashed changes
	}
	return nil
}

func (x *Msg) GetMsgRegisterPair() *MsgRegisterPair {
	if x, ok := x.GetSum().(*Msg_MsgRegisterPair); ok {
		return x.MsgRegisterPair
	}
	return nil
}

func (x *Msg) GetMsgCreateAccount() *MsgCreateAccount {
	if x, ok := x.GetSum().(*Msg_MsgCreateAccount); ok {
		return x.MsgCreateAccount
	}
	return nil
}

type isMsg_Sum interface {
	isMsg_Sum()
}

<<<<<<< Updated upstream
type Msg_MsgBid struct {
	MsgBid *MsgBid `protobuf:"bytes,1,opt,name=msg_bid,json=msgBid,proto3,oneof"`
}

type Msg_MsgAsk struct {
	MsgAsk *MsgAsk `protobuf:"bytes,2,opt,name=msg_ask,json=msgAsk,proto3,oneof"`
||||||| constructed merge base
type Msg_MsgPlaceOrder struct {
	MsgPlaceOrder *MsgPlaceOrder `protobuf:"bytes,1,opt,name=msg_place_order,json=msgPlaceOrder,proto3,oneof"`
=======
type Msg_MsgAsk struct {
	MsgAsk *MsgAsk `protobuf:"bytes,1,opt,name=msg_ask,json=msgAsk,proto3,oneof"`
}

type Msg_MsgBid struct {
	MsgBid *MsgBid `protobuf:"bytes,2,opt,name=msg_bid,json=msgBid,proto3,oneof"`
>>>>>>> Stashed changes
}

type Msg_MsgRegisterPair struct {
	MsgRegisterPair *MsgRegisterPair `protobuf:"bytes,3,opt,name=msg_register_pair,json=msgRegisterPair,proto3,oneof"`
}

type Msg_MsgCreateAccount struct {
	MsgCreateAccount *MsgCreateAccount `protobuf:"bytes,4,opt,name=msg_create_account,json=msgCreateAccount,proto3,oneof"`
}

<<<<<<< Updated upstream
func (*Msg_MsgBid) isMsg_Sum() {}

func (*Msg_MsgAsk) isMsg_Sum() {}
||||||| constructed merge base
func (*Msg_MsgPlaceOrder) isMsg_Sum() {}
=======
func (*Msg_MsgAsk) isMsg_Sum() {}

func (*Msg_MsgBid) isMsg_Sum() {}
>>>>>>> Stashed changes

func (*Msg_MsgRegisterPair) isMsg_Sum() {}

func (*Msg_MsgCreateAccount) isMsg_Sum() {}

var File_msgs_proto protoreflect.FileDescriptor

var file_msgs_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x1a, 0x0a, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x72,
<<<<<<< Updated upstream
	0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70,
	0x61, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x06, 0x4d, 0x73,
	0x67, 0x41, 0x73, 0x6b, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x69, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x22, 0xff, 0x01, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x42, 0x69,
	0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d,
	0x73, 0x67, 0x41, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x41, 0x73, 0x6b, 0x12,
	0x48, 0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12, 0x4b, 0x0a, 0x12, 0x6d, 0x73, 0x67,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x42, 0x39, 0x5a,
	0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
||||||| constructed merge base
	0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x69, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x0f, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12, 0x23, 0x0a,
	0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61,
	0x69, 0x72, 0x22, 0xe7, 0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x0f, 0x6d, 0x73,
	0x67, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0d, 0x6d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x48,
	0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x61, 0x69, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12, 0x4b, 0x0a, 0x12, 0x6d, 0x73, 0x67, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74,
	0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
=======
	0x6f, 0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70,
	0x61, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x69, 0x64, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0xce, 0x01, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x41, 0x73, 0x6b, 0x12,
	0x23, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04,
	0x70, 0x61, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x73, 0x6b, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x69, 0x74, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x36, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x22, 0xff, 0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x73,
	0x67, 0x41, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x41, 0x73, 0x6b, 0x12, 0x2c,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x73, 0x67, 0x42,
	0x69, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x42, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x11,
	0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x69,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x69, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12, 0x4b, 0x0a, 0x12, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x10, 0x6d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x61,
	0x62, 0x63, 0x69, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
>>>>>>> Stashed changes
}

var (
	file_msgs_proto_rawDescOnce sync.Once
	file_msgs_proto_rawDescData = file_msgs_proto_rawDesc
)

func file_msgs_proto_rawDescGZIP() []byte {
	file_msgs_proto_rawDescOnce.Do(func() {
		file_msgs_proto_rawDescData = protoimpl.X.CompressGZIP(file_msgs_proto_rawDescData)
	})
	return file_msgs_proto_rawDescData
}

var file_msgs_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_msgs_proto_goTypes = []interface{}{
<<<<<<< Updated upstream
	(*MsgBid)(nil),           // 0: orderbook.MsgBid
	(*MsgAsk)(nil),           // 1: orderbook.MsgAsk
	(*MsgCreateAccount)(nil), // 2: orderbook.MsgCreateAccount
	(*MsgRegisterPair)(nil),  // 3: orderbook.MsgRegisterPair
	(*Msg)(nil),              // 4: orderbook.Msg
	(*Pair)(nil),             // 5: orderbook.Pair
	(*Commodity)(nil),        // 6: orderbook.Commodity
||||||| constructed merge base
	(*MsgPlaceOrder)(nil),    // 0: orderbook.MsgPlaceOrder
	(*MsgCreateAccount)(nil), // 1: orderbook.MsgCreateAccount
	(*MsgRegisterPair)(nil),  // 2: orderbook.MsgRegisterPair
	(*Msg)(nil),              // 3: orderbook.Msg
	(*Pair)(nil),             // 4: orderbook.Pair
	(*Order)(nil),            // 5: orderbook.Order
	(*Commodity)(nil),        // 6: orderbook.Commodity
=======
	(*MsgBid)(nil),           // 0: orderbook.MsgBid
	(*MsgAsk)(nil),           // 1: orderbook.MsgAsk
	(*MsgCreateAccount)(nil), // 2: orderbook.MsgCreateAccount
	(*MsgRegisterPair)(nil),  // 3: orderbook.MsgRegisterPair
	(*Msg)(nil),              // 4: orderbook.Msg
	(*Pair)(nil),             // 5: orderbook.Pair
	(*OrderBid)(nil),         // 6: orderbook.OrderBid
	(*OrderAsk)(nil),         // 7: orderbook.OrderAsk
	(*Commodity)(nil),        // 8: orderbook.Commodity
>>>>>>> Stashed changes
}
var file_msgs_proto_depIdxs = []int32{
<<<<<<< Updated upstream
	5, // 0: orderbook.MsgBid.pair:type_name -> orderbook.Pair
	5, // 1: orderbook.MsgAsk.pair:type_name -> orderbook.Pair
	6, // 2: orderbook.MsgCreateAccount.commodities:type_name -> orderbook.Commodity
	5, // 3: orderbook.MsgRegisterPair.pair:type_name -> orderbook.Pair
	0, // 4: orderbook.Msg.msg_bid:type_name -> orderbook.MsgBid
	1, // 5: orderbook.Msg.msg_ask:type_name -> orderbook.MsgAsk
	3, // 6: orderbook.Msg.msg_register_pair:type_name -> orderbook.MsgRegisterPair
	2, // 7: orderbook.Msg.msg_create_account:type_name -> orderbook.MsgCreateAccount
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
||||||| constructed merge base
	4, // 0: orderbook.MsgPlaceOrder.pair:type_name -> orderbook.Pair
	5, // 1: orderbook.MsgPlaceOrder.order:type_name -> orderbook.Order
	6, // 2: orderbook.MsgCreateAccount.commodities:type_name -> orderbook.Commodity
	4, // 3: orderbook.MsgRegisterPair.pair:type_name -> orderbook.Pair
	0, // 4: orderbook.Msg.msg_place_order:type_name -> orderbook.MsgPlaceOrder
	2, // 5: orderbook.Msg.msg_register_pair:type_name -> orderbook.MsgRegisterPair
	1, // 6: orderbook.Msg.msg_create_account:type_name -> orderbook.MsgCreateAccount
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
=======
	5,  // 0: orderbook.MsgBid.pair:type_name -> orderbook.Pair
	6,  // 1: orderbook.MsgBid.order:type_name -> orderbook.OrderBid
	5,  // 2: orderbook.MsgAsk.pair:type_name -> orderbook.Pair
	7,  // 3: orderbook.MsgAsk.order:type_name -> orderbook.OrderAsk
	8,  // 4: orderbook.MsgCreateAccount.commodities:type_name -> orderbook.Commodity
	5,  // 5: orderbook.MsgRegisterPair.pair:type_name -> orderbook.Pair
	1,  // 6: orderbook.Msg.msg_ask:type_name -> orderbook.MsgAsk
	0,  // 7: orderbook.Msg.msg_bid:type_name -> orderbook.MsgBid
	3,  // 8: orderbook.Msg.msg_register_pair:type_name -> orderbook.MsgRegisterPair
	2,  // 9: orderbook.Msg.msg_create_account:type_name -> orderbook.MsgCreateAccount
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
>>>>>>> Stashed changes
}

func init() { file_msgs_proto_init() }
func file_msgs_proto_init() {
	if File_msgs_proto != nil {
		return
	}
	file_wire_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_msgs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAsk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
<<<<<<< Updated upstream
	file_msgs_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Msg_MsgBid)(nil),
		(*Msg_MsgAsk)(nil),
||||||| constructed merge base
	file_msgs_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Msg_MsgPlaceOrder)(nil),
=======
	file_msgs_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Msg_MsgAsk)(nil),
		(*Msg_MsgBid)(nil),
>>>>>>> Stashed changes
		(*Msg_MsgRegisterPair)(nil),
		(*Msg_MsgCreateAccount)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msgs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msgs_proto_goTypes,
		DependencyIndexes: file_msgs_proto_depIdxs,
		MessageInfos:      file_msgs_proto_msgTypes,
	}.Build()
	File_msgs_proto = out.File
	file_msgs_proto_rawDesc = nil
	file_msgs_proto_goTypes = nil
	file_msgs_proto_depIdxs = nil
}
